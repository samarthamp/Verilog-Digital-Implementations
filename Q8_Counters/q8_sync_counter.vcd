$date
	Sat Oct  5 02:00:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module sync_counter_test $end
$var wire 4 ! A [3:0] $end
$var reg 1 " clk $end
$var reg 4 # count [3:0] $end
$var reg 1 $ en $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 4 & count [3:0] $end
$var wire 1 $ en $end
$var wire 1 ' in1 $end
$var wire 1 ( in2 $end
$var wire 1 ) in3 $end
$var wire 1 % reset $end
$var wire 4 * Abar [3:0] $end
$var wire 4 + A [3:0] $end
$scope module tff0 $end
$var wire 1 $ T $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 , q $end
$var reg 1 - qbar $end
$upscope $end
$scope module tff1 $end
$var wire 1 ' T $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 . q $end
$var reg 1 / qbar $end
$upscope $end
$scope module tff2 $end
$var wire 1 ( T $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 0 q $end
$var reg 1 1 qbar $end
$upscope $end
$scope module tff3 $end
$var wire 1 ) T $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 2 q $end
$var reg 1 3 qbar $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 4 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
13
02
11
00
1/
0.
1-
0,
b0 +
b1111 *
0)
0(
0'
bx &
1%
x$
bx #
0"
b0 !
$end
#5
1"
#10
0"
b0 #
b0 &
1$
b0 4
0%
#15
1'
b1110 *
0-
b1 !
b1 +
1,
1"
#20
0"
b1 #
b1 &
b1 4
#25
0'
0/
1.
b1101 *
1-
b10 !
b10 +
0,
1"
#30
0"
b10 #
b10 &
b10 4
#35
1(
1'
b1100 *
0-
b11 !
b11 +
1,
1"
#40
0"
b11 #
b11 &
b11 4
#45
0(
0'
01
10
1/
0.
b1011 *
1-
b100 !
b100 +
0,
1"
#50
0"
b100 #
b100 &
b100 4
#55
1'
b1010 *
0-
b101 !
b101 +
1,
1"
#60
0"
b101 #
b101 &
b101 4
#65
0'
0/
1.
b1001 *
1-
b110 !
b110 +
0,
1"
#70
0"
b110 #
b110 &
b110 4
#75
1)
1(
1'
b1000 *
0-
b111 !
b111 +
1,
1"
#80
0"
b111 #
b111 &
b111 4
#85
0)
0(
0'
03
12
11
00
1/
0.
b111 *
1-
b1000 !
b1000 +
0,
1"
#90
0"
b1000 #
b1000 &
b1000 4
#95
1'
b110 *
0-
b1001 !
b1001 +
1,
1"
#100
0"
b1001 #
b1001 &
b1001 4
#105
0'
0/
1.
b101 *
1-
b1010 !
b1010 +
0,
1"
#110
0"
b1010 #
b1010 &
b1010 4
#115
1(
1'
b100 *
0-
b1011 !
b1011 +
1,
1"
#120
0"
b1011 #
b1011 &
b1011 4
#125
0(
0'
01
10
1/
0.
b11 *
1-
b1100 !
b1100 +
0,
1"
#130
0"
b1100 #
b1100 &
b1100 4
#135
1'
b10 *
0-
b1101 !
b1101 +
1,
1"
#140
0"
b1101 #
b1101 &
b1101 4
#145
0'
0/
1.
b1 *
1-
b1110 !
b1110 +
0,
1"
#150
0"
b1110 #
b1110 &
b1110 4
#155
1)
1(
1'
b0 *
0-
b1111 !
b1111 +
1,
1"
#160
0"
b1111 #
b1111 &
b1111 4
#165
0)
0(
0'
13
02
11
00
1/
0.
b1111 *
1-
b0 !
b0 +
0,
1"
#170
0"
b10000 4
