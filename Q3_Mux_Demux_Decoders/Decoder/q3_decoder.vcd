$date
	Thu Oct  3 21:15:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decoder_3x8_test $end
$var wire 1 ! E $end
$var wire 8 " Y [7:0] $end
$var reg 3 # A [2:0] $end
$scope module uut $end
$var wire 3 $ A [2:0] $end
$var wire 1 ! E $end
$var wire 1 % en $end
$var wire 4 & temp3 [3:0] $end
$var wire 4 ' temp2 [3:0] $end
$var wire 2 ( temp1 [1:0] $end
$var wire 8 ) Y [7:0] $end
$scope module decoder_1x2_1 $end
$var wire 1 * A $end
$var wire 1 ! E $end
$var wire 2 + Y [1:0] $end
$upscope $end
$scope module decoder_2x4_1 $end
$var wire 2 , A [1:0] $end
$var wire 1 - E $end
$var wire 1 . en $end
$var wire 2 / temp3 [1:0] $end
$var wire 2 0 temp2 [1:0] $end
$var wire 2 1 temp1 [1:0] $end
$var wire 4 2 Y [3:0] $end
$scope module decoder_1x2_1 $end
$var wire 1 3 A $end
$var wire 1 - E $end
$var wire 2 4 Y [1:0] $end
$upscope $end
$scope module decoder_1x2_2 $end
$var wire 1 5 A $end
$var wire 1 6 E $end
$var wire 2 7 Y [1:0] $end
$upscope $end
$scope module decoder_1x2_3 $end
$var wire 1 8 A $end
$var wire 1 9 E $end
$var wire 2 : Y [1:0] $end
$upscope $end
$upscope $end
$scope module decoder_2x4_2 $end
$var wire 2 ; A [1:0] $end
$var wire 1 < E $end
$var wire 1 = en $end
$var wire 2 > temp3 [1:0] $end
$var wire 2 ? temp2 [1:0] $end
$var wire 2 @ temp1 [1:0] $end
$var wire 4 A Y [3:0] $end
$scope module decoder_1x2_1 $end
$var wire 1 B A $end
$var wire 1 < E $end
$var wire 2 C Y [1:0] $end
$upscope $end
$scope module decoder_1x2_2 $end
$var wire 1 D A $end
$var wire 1 E E $end
$var wire 2 F Y [1:0] $end
$upscope $end
$scope module decoder_1x2_3 $end
$var wire 1 G A $end
$var wire 1 H E $end
$var wire 2 I Y [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 J i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 K i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 K
b0 J
b0 I
0H
0G
b0 F
0E
0D
b0 C
0B
b0 A
b0 @
b0 ?
b0 >
1=
0<
b0 ;
b0 :
09
08
b1 7
16
05
b1 4
03
b1 2
b1 1
b1 0
b0 /
1.
1-
b0 ,
b1 +
0*
b1 )
b1 (
b1 '
b0 &
1%
b0 $
b0 #
b1 "
1!
$end
#10
b10 "
b10 )
b10 '
b10 2
b10 0
b10 7
15
18
1D
1G
b1 ,
b1 ;
b1 #
b1 $
b1 J
#20
06
b1 /
b1 :
b100 "
b100 )
19
b100 '
b100 2
b10 1
b10 4
b0 0
b0 7
13
05
08
1B
0D
0G
b10 ,
b10 ;
b10 #
b10 $
b10 J
#30
b1000 "
b1000 )
b1000 '
b1000 2
b10 /
b10 :
15
18
1D
1G
b11 ,
b11 ;
b11 #
b11 $
b11 J
#40
b1 &
b1 A
b0 0
b0 7
b1 ?
b1 F
06
b10000 "
b10000 )
1E
0-
09
b0 '
b0 2
b1 @
b1 C
1<
b0 1
b0 4
b0 /
b0 :
b10 (
b10 +
03
05
08
0B
0D
0G
1*
b0 ,
b0 ;
b100 #
b100 $
b100 J
#50
b100000 "
b100000 )
b10 &
b10 A
b10 ?
b10 F
15
18
1D
1G
b1 ,
b1 ;
b101 #
b101 $
b101 J
#60
0E
b1 >
b1 I
b1000000 "
b1000000 )
1H
b100 &
b100 A
b10 @
b10 C
b0 ?
b0 F
13
05
08
1B
0D
0G
b10 ,
b10 ;
b110 #
b110 $
b110 J
#70
b10000000 "
b10000000 )
b1000 &
b1000 A
b10 >
b10 I
15
18
1D
1G
b11 ,
b11 ;
b111 #
b111 $
b111 J
#80
b1000 J
