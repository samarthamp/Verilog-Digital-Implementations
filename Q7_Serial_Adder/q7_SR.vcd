$date
	Fri Oct  4 23:42:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module three_bit_SR_test $end
$var wire 1 ! q $end
$var reg 3 " A [2:0] $end
$var reg 1 # clk $end
$var reg 1 $ d $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 3 & A [2:0] $end
$var wire 1 # clk $end
$var wire 1 $ d $end
$var wire 1 ! q $end
$var wire 1 % reset $end
$var wire 1 ' q3 $end
$var wire 1 ( q2 $end
$var wire 1 ) q1 $end
$scope module D1 $end
$var wire 1 # clk $end
$var wire 1 $ d $end
$var wire 1 % reset $end
$var reg 1 ) q $end
$upscope $end
$scope module D2 $end
$var wire 1 # clk $end
$var wire 1 ) d $end
$var wire 1 % reset $end
$var reg 1 ( q $end
$upscope $end
$scope module D3 $end
$var wire 1 # clk $end
$var wire 1 ( d $end
$var wire 1 % reset $end
$var reg 1 ' q $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 * i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 + j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b0 *
x)
x(
x'
b110 &
0%
0$
0#
b110 "
x!
$end
#10
0)
1#
b1 +
#20
0#
1$
b1 *
b0 +
#30
0(
1)
1#
b1 +
#40
0#
b10 *
b0 +
#50
1(
0!
0'
1#
b1 +
#60
b11 *
b10 +
